// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: request.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Reworld.Teamwork {

  /// <summary>Holder for reflection information generated from request.proto</summary>
  public static partial class RequestReflection {

    #region Descriptor
    /// <summary>File descriptor for request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1yZXF1ZXN0LnByb3RvIoUBCgdSZXF1ZXN0EhsKBkFjdGlvbhgBIAEoDjIL",
            "LlBpbmdBY3Rpb24SDgoGVGVhbUlkGAIgASgDEgwKBFVVSUQYAyABKAkSEQoJ",
            "VGltZXN0YW1wGAQgASgDEgwKBFNpZ24YBSABKAkSEAoIcmVjZWl2ZXIYBiAD",
            "KAkSDAoERGF0YRgHIAEoDCpLCgpQaW5nQWN0aW9uEg0KCUhlYXJ0YmVhdBAA",
            "Eg4KClJlcVJlcGxpY2EQARIRCg1SZXFEaXN0cmlidXRlEAISCwoHT2ZmbGlu",
            "ZRADQjQKD2NvbS5yZXdvcmxkLnd3d0IIVGVhbXdvcmtaBC47cGKqAhBSZXdv",
            "cmxkLlRlYW13b3JrYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Reworld.Teamwork.PingAction), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Reworld.Teamwork.Request), global::Reworld.Teamwork.Request.Parser, new[]{ "Action", "TeamId", "UUID", "Timestamp", "Sign", "Receiver", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 客户端请求操作类型
  /// </summary>
  public enum PingAction {
    /// <summary>
    /// 心跳
    /// </summary>
    [pbr::OriginalName("Heartbeat")] Heartbeat = 0,
    /// <summary>
    /// 请求地图副本
    /// </summary>
    [pbr::OriginalName("ReqReplica")] ReqReplica = 1,
    /// <summary>
    /// 请求分发数据(副本/动作)
    /// </summary>
    [pbr::OriginalName("ReqDistribute")] ReqDistribute = 2,
    /// <summary>
    /// 通知下线
    /// </summary>
    [pbr::OriginalName("Offline")] Offline = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 请求
  /// </summary>
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reworld.Teamwork.RequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      action_ = other.action_;
      teamId_ = other.teamId_;
      uUID_ = other.uUID_;
      timestamp_ = other.timestamp_;
      sign_ = other.sign_;
      receiver_ = other.receiver_.Clone();
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "Action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::Reworld.Teamwork.PingAction action_ = global::Reworld.Teamwork.PingAction.Heartbeat;
    /// <summary>
    /// 操作类型(必填)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reworld.Teamwork.PingAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "TeamId" field.</summary>
    public const int TeamIdFieldNumber = 2;
    private long teamId_;
    /// <summary>
    /// 所在团队编号(必填)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TeamId {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "UUID" field.</summary>
    public const int UUIDFieldNumber = 3;
    private string uUID_ = "";
    /// <summary>
    /// 用户编号(必填)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UUID {
      get { return uUID_; }
      set {
        uUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 4;
    private long timestamp_;
    /// <summary>
    /// 时间戳(必填)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "Sign" field.</summary>
    public const int SignFieldNumber = 5;
    private string sign_ = "";
    /// <summary>
    /// 签名(必填)(算法：sha256(TeamId.UUID.Timestamp.Secret))
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sign {
      get { return sign_; }
      set {
        sign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "receiver" field.</summary>
    public const int ReceiverFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_receiver_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> receiver_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 接收者(可选,为空时群发)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Receiver {
      get { return receiver_; }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 7;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// 数据内容(可选)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (TeamId != other.TeamId) return false;
      if (UUID != other.UUID) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Sign != other.Sign) return false;
      if(!receiver_.Equals(other.receiver_)) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != global::Reworld.Teamwork.PingAction.Heartbeat) hash ^= Action.GetHashCode();
      if (TeamId != 0L) hash ^= TeamId.GetHashCode();
      if (UUID.Length != 0) hash ^= UUID.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Sign.Length != 0) hash ^= Sign.GetHashCode();
      hash ^= receiver_.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Action != global::Reworld.Teamwork.PingAction.Heartbeat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (TeamId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TeamId);
      }
      if (UUID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UUID);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Timestamp);
      }
      if (Sign.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Sign);
      }
      receiver_.WriteTo(output, _repeated_receiver_codec);
      if (Data.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != global::Reworld.Teamwork.PingAction.Heartbeat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (TeamId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamId);
      }
      if (UUID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UUID);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Sign.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sign);
      }
      size += receiver_.CalculateSize(_repeated_receiver_codec);
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Action != global::Reworld.Teamwork.PingAction.Heartbeat) {
        Action = other.Action;
      }
      if (other.TeamId != 0L) {
        TeamId = other.TeamId;
      }
      if (other.UUID.Length != 0) {
        UUID = other.UUID;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Sign.Length != 0) {
        Sign = other.Sign;
      }
      receiver_.Add(other.receiver_);
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = (global::Reworld.Teamwork.PingAction) input.ReadEnum();
            break;
          }
          case 16: {
            TeamId = input.ReadInt64();
            break;
          }
          case 26: {
            UUID = input.ReadString();
            break;
          }
          case 32: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 42: {
            Sign = input.ReadString();
            break;
          }
          case 50: {
            receiver_.AddEntriesFrom(input, _repeated_receiver_codec);
            break;
          }
          case 58: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
